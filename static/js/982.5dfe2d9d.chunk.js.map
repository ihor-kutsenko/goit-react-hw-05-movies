{"version":3,"file":"static/js/982.5dfe2d9d.chunk.js","mappings":"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","sources":["components/NotifyOptions/NotifyOptions.jsx","hooks/UseLocalStorage.jsx","components/LibraryCard/LibraryCard.styled.js","components/LibraryCard/LibraryCard.jsx","pages/Library/Library.styled.js","pages/Library/Library.jsx"],"sourcesContent":["const notifyOptions = {\n  position: 'top-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\n\nexport default notifyOptions;\n","import { useState, useEffect } from 'react';\n\nexport default function useLocalStorage(key) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) || [];\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ContainerCard = styled.div`\n  padding: 15px;\n  height: auto;\n  border-radius: 12px;\n  background-color: ${props => props.theme.colors.grey};\n  color: ${props => props.theme.colors.text};\n\n  @media screen and (min-width: 600px) {\n    display: flex;\n    gap: 30px;\n  }\n`;\n\nexport const Image = styled.img`\n  margin: 0 auto;\n  margin-bottom: 20px;\n  border-radius: 10px;\n  @media screen and (min-width: 600px) {\n    width: 300px;\n    margin-bottom: 0;\n    margin: 0;\n  }\n`;\nexport const TextContainer = styled.div``;\n\nexport const TextWrapper = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  padding: 8px 16px;\n  margin-top: 20px;\n  border-radius: 25px;\n  text-align: center;\n  border: none;\n  cursor: pointer;\n  font-weight: 700;\n  font-size: 18px;\n  color: ${props => props.theme.colors.black};\n  background-color: ${props => props.theme.colors.accent};\n  font-weight: 600;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: ${props => props.theme.colors.white};\n  }\n`;\n\nexport const MovieTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.accent};\n`;\nexport const ReleaseYear = styled.span`\n  font-weight: 600;\n  padding: 0px 10px;\n`;\n\nexport const TextTitle = styled.span`\n  font-weight: 600;\n  color: ${props => props.theme.colors.white};\n`;\nexport const TextOverview = styled.span`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const TextTitleInfo = styled.span`\n  font-weight: 600;\n  color: ${props => props.theme.colors.accent};\n`;\n\nexport const InfoText = styled.h3`\n  text-align: center;\n  margin-top: 120px;\n  margin-bottom: 20px;\n  color: ${props => props.theme.colors.white};\n`;\nexport const InfoList = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 30px;\n`;\n\nexport const Section = styled.section`\n  background-color: green;\n`;\n\nexport const InfoItem = styled(Link)`\n  display: inline-block;\n  padding: 8px 16px;\n  border-radius: 25px;\n  text-decoration: none;\n  text-align: center;\n  width: 200px;\n  color: ${props => props.theme.colors.black};\n  background-color: ${props => props.theme.colors.accent};\n  opacity: 2;\n  font-weight: 500;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: ${props => props.theme.colors.white};\n  }\n`;\n","import { toast } from 'react-toastify';\nimport notifyOptions from 'components/NotifyOptions/NotifyOptions';\nimport { useLocation } from 'react-router-dom';\n\nimport {\n  Image,\n  MovieTitle,\n  TextOverview,\n  TextTitle,\n  ContainerCard,\n  TextTitleInfo,\n  TextContainer,\n  TextWrapper,\n  ReleaseYear,\n  InfoText,\n  Button,\n  InfoItem,\n} from './LibraryCard.styled';\n\nimport useLocalStorage from 'hooks/UseLocalStorage';\n\nconst LibraryMovieCard = ({\n  detail: {\n    poster_path,\n    id,\n    title,\n    vote_average,\n    overview,\n    genres,\n    release_date,\n  },\n  updateMovieStorages,\n}) => {\n  const posterUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w300${poster_path}`\n    : `https://www.scifi-movies.com/images/site/en/affiche_nondisponible.jpg`;\n\n  const releaseYear = new Date(Date.parse(release_date)).getFullYear() || '';\n\n  const rating = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : 'Not rated yet';\n\n  const review = overview ? overview : 'Not overview';\n\n  const [movieStorages] = useLocalStorage('MovieStorages');\n  const location = useLocation();\n\n  const isInLibrary = movieStorages.some(\n    existingMovie => existingMovie.id === id\n  );\n\n  const toggleLibraryStatus = () => {\n    if (isInLibrary) {\n      updateMovieStorages(prevStorages =>\n        prevStorages.filter(movie => movie.id !== id)\n      );\n      toast.info(`${title} was deleted from your Library`, notifyOptions);\n    } else {\n      const movie = {\n        id,\n        poster_path,\n        overview,\n        title,\n        release_date,\n        vote_average,\n        genres,\n      };\n      updateMovieStorages(prevStorages => [...prevStorages, movie]);\n      toast.success(\n        `${title} was successfully added to your Library`,\n        notifyOptions\n      );\n    }\n  };\n\n  return (\n    <>\n      <ContainerCard>\n        <Image src={posterUrl} alt={title} width=\"200\"></Image>\n\n        <TextContainer>\n          <MovieTitle>\n            {title}\n            <ReleaseYear>({releaseYear})</ReleaseYear>\n          </MovieTitle>\n          <TextTitle>User score: {rating}</TextTitle>\n          <TextOverview>\n            <TextTitle>Overview</TextTitle>\n            {review}\n          </TextOverview>\n          <TextWrapper>\n            <TextTitle>Release date: </TextTitle>\n            <TextTitleInfo>{releaseYear}</TextTitleInfo>\n          </TextWrapper>\n          {genres && genres.length > 0 && (\n            <TextWrapper>\n              <TextTitle>Genres: </TextTitle>\n              <TextTitleInfo>\n                {genres.map(genre => genre.name).join(', ')}\n              </TextTitleInfo>\n            </TextWrapper>\n          )}\n\n          <Button type=\"button\" onClick={toggleLibraryStatus} disabled={false}>\n            {isInLibrary ? 'Delete Film from Library' : 'Add Film to Library'}\n          </Button>\n\n          <InfoText>\n            <InfoItem to={`/movies/${id}`} state={{ from: location }}>\n              Movie Details\n            </InfoItem>\n          </InfoText>\n        </TextContainer>\n      </ContainerCard>\n    </>\n  );\n};\n\nexport default LibraryMovieCard;\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  margin: 10px;\n`;\n\nexport const TitleLibrary = styled.h2`\n  position: relative;\n  margin: 40px auto;\n  font-size: 40px;\n  text-align: center;\n  text-transform: uppercase;\n  letter-spacing: 20px;\n  overflow: hidden;\n  background: linear-gradient(\n    290deg,\n    rgb(81, 28, 0),\n    rgb(238, 238, 238),\n    rgb(255, 98, 0)\n  );\n  background-repeat: no-repeat;\n  -webkit-background-clip: text;\n  background-clip: text;\n  -webkit-text-fill-color: rgba(255, 255, 255, 0);\n`;\n\nexport const LibraryImg = styled.img`\n  width: 100%;\n  margin: 0 auto 20px;\n`;\n","import useLocalStorage from 'hooks/UseLocalStorage';\nimport LibraryMovie from '../../img/movie.png';\nimport LibraryMovieCard from 'components/LibraryCard/LibraryCard';\nimport { Card, LibraryImg, TitleLibrary } from './Library.styled';\n\nconst Library = () => {\n  const [movieStorages, setMovieStorages] = useLocalStorage('MovieStorages');\n\n  return (\n    <>\n      {movieStorages.map(movie => (\n        <Card key={movie.id}>\n          <LibraryMovieCard\n            detail={movie}\n            updateMovieStorages={setMovieStorages}\n          />\n        </Card>\n      ))}\n      {movieStorages.length === 0 && (\n        <>\n          <TitleLibrary>Your Library is empty...</TitleLibrary>\n          <LibraryImg src={LibraryMovie} alt=\"cinema\" />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Library;\n"],"names":["notifyOptions","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","useLocalStorage","key","_useState","useState","JSON","parse","window","localStorage","getItem","_useState2","_slicedToArray","state","setState","useEffect","setItem","stringify","ContainerCard","styled","_templateObject","_taggedTemplateLiteral","props","colors","grey","text","Image","_templateObject2","TextContainer","_templateObject3","TextWrapper","_templateObject4","Button","_templateObject5","black","accent","white","MovieTitle","_templateObject6","ReleaseYear","_templateObject7","TextTitle","_templateObject8","TextOverview","_templateObject9","TextTitleInfo","_templateObject10","InfoText","_templateObject11","InfoItem","_templateObject12","_templateObject13","Link","_templateObject14","_ref","_ref$detail","detail","poster_path","id","title","vote_average","overview","genres","release_date","updateMovieStorages","posterUrl","concat","releaseYear","Date","getFullYear","rating","toFixed","review","_useLocalStorage","movieStorages","location","useLocation","isInLibrary","some","existingMovie","_jsx","_Fragment","children","_jsxs","src","alt","width","length","map","genre","name","join","type","onClick","prevStorages","filter","movie","toast","_toConsumableArray","disabled","to","from","Card","TitleLibrary","LibraryImg","_useLocalStorage2","setMovieStorages","LibraryMovieCard","LibraryMovie"],"sourceRoot":""}